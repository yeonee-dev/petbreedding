<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	
		<!-- 서버 기반 설정이 될 Root Context 등록 -->
		 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		 destroy-method="close">
		 
		 <!-- destroy-method 옵션으로 사용한 SqlSession을 자동으로 Close 시킨다 -->
		 <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		 <property name="url" value="jdbc:oracle:thin:@112.221.156.36:1521:xe" />
		 <property name="username" value="pet" />
		 <property name="password" value="PET" />
<!-- 		 <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" /> -->
<!-- 		 <property name="username" value="petLc" /> -->
<!-- 		 <property name="password" value="PETLC" /> -->
		 </bean>
		 
		 <bean id="transactionManager"
		 class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		 <property name="dataSource" ref="dataSource" />
		 </bean>
		 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		 <property name="configLocation" value="classpath:mybatis-config.xml" />
		 <property name="dataSource" ref="dataSource" />
		  </bean>
		 <bean  id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		 <constructor-arg ref="sqlSessionFactory" />
		 </bean>
		 <!-- Transaction 시점 등록 -->
		 <tx:advice id="txAdvice" transaction-manager="transactionManager">
		 <tx:attributes>
		 <tx:method name="select*" read-only="true" rollback-for="Exception" />
		 <tx:method name="insert*" rollback-for="Exception" />
		 <tx:method name="update*" rollback-for="Exception" />
		 <tx:method name="delete*" rollback-for="Exception" />
		 </tx:attributes>
		 </tx:advice>
		 <tx:annotation-driven />
		 
		 <!-- Transaction 관련된 AOP 설정 -->
		 <aop:config proxy-target-class="true">
		 <aop:pointcut id="daoMethod" expression="execution(* 
		kh.com.petbreedding.*Impl.*(..)))" />
		 <aop:advisor id="transactionAdvisor" pointcut-ref="daoMethod"
		 advice-ref="txAdvice" />
		 </aop:config>
		


</beans>
